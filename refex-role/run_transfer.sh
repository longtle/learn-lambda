#!/bin/sh

#############################################################
#   Need to change TN and BIN_SIZE
# Input: feature names and F file
# Output: V, G
#############################################################

k_AS=$1     #1st parameter is test
TN=$2       #2nd parameter is training network

START=$(date +%s)

JAVA=java

MATLAB=matlab

MEM_IN_MEGS=4000

#input file

INFILE=../data/network/${k_AS}.csv

#parameter values
CORR_THRESH=0 #usually 0 -- this is the initial lattice error threshold
BIN_SIZE=0.5 #usually 0.5 -- this is the fraction in each bin

TRAINDIR=../data/role
TRANSFERDIR=../data/role-tl

LEARNED_FEAT_NAME=${TRAINDIR}/${TN}-out-featureNames.csv #List of features generated by training network
F_FILE=${TRAINDIR}/${TN}-out-roleFeatures.txt #F(rolexfeature) generated by trainning network

#output features file from ReFex.jar
FEATFILE=${TRANSFERDIR}/${k_AS}-from-${TN}-out

#Generate FeatureFile using Network and featureName
${JAVA} -Xmx${MEM_IN_MEGS}M -cp ReFex.jar CalculateFeatures ${INFILE} ${LEARNED_FEAT_NAME} ${BIN_SIZE} ${FEATFILE}

#output node & role files
NODEFILE=${TRANSFERDIR}/${k_AS}-from-${TN}-out-nodeRoles.txt #which node belongs to which role

#feature files are prefixed with this
IDFILE=${TRANSFERDIR}/${k_AS}-from-${TN}-out-ids.txt


echo Start matlab
date

${MATLAB} -nodisplay -r "javaaddpath('.');W=load('${FEATFILE}-featureValues.csv'); IDs=W(:,1); save('${IDFILE}', 'IDs', '-ASCII'); [n,m] = size(W); V=W(1:n,2:m); F=load('${F_FILE}') ; G=NMF_LS_FixedF(V, F); save('${NODEFILE}', 'G', '-ASCII'); quit;"

END=$(date +%s)
DIFF=$(( $END - $START ))
echo "It took $DIFF seconds"

echo Done with matlab
date

echo Finished analysis
date


